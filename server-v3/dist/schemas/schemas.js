"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _apolloServerExpress = require("apollo-server-express");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\nscalar Date\nenum EnumCategory {\n  GENERAL\n  GIT\n  BOOK\n}\n\nenum EnumLinkedStore {\n  KYOBO\n  YES24\n}\n\nenum EnumUserType {\n  KAKAO\n  GIT\n  GOOGLE\n}\n\nenum EnumLevel {\n  VISITOR\n  MEMBER\n  WRITER\n  MANAGER\n}\n\nenum EnumFileType {\n  EXT_IMG\n  LOCAL_IMG\n  EXT_FILE\n  LOCAL_FILE\n  ETC\n}\n\ninterface Post {\n  title: String!\n  category: EnumCategory!\n  ownerId: ID\n  owner: User\n  contributions: [Contribution]\n  originalContents: String!\n  series: [Series]\n  topics: [Topic]\n  comments: [Comment]\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: [File]\n  thumbImages: [Image]\n  contentImages: [Image]\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date\n  updatedAt: Date\n}\n\ntype GeneralPost implements Post {\n  title: String!\n  contents: String!\n  category: EnumCategory!\n  ownerId: ID\n  owner: User\n  contributions: [Contribution]\n  originalContents: String!\n  series: [Series]\n  topics: [Topic]\n  comments: [Comment]\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: [File]\n  thumbImages: [Image]\n  contentImages: [Image]\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date\n  updatedAt: Date\n}\n\ntype BookPost implements Post {\n  title: String!\n  bookName: String!\n  bookPublisher: String!\n  bookPrice: String\n  bookDescription: String\n  bookUrl: String\n  linkedStore: EnumLinkedStore!\n  contents: String!\n  category: EnumCategory!\n  ownerId: ID\n  owner: User\n  contributions: [Contribution]\n  originalContents: String!\n  series: [Series]\n  topics: [Topic]\n  comments: [Comment]\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: [File]\n  thumbImages: [Image]\n  contentImages: [Image]\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype GitPost implements Post {\n  title: String!\n  gitId: String!\n  gitAuthor: String!\n  gitTitle: String!\n  category: EnumCategory!\n  ownerId: ID\n  owner: User\n  contributions: [Contribution]\n  originalContents: String!\n  series: [Series]\n  topics: [Topic]\n  comments: [Comment]\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: [File]\n  thumbImages: [Image]\n  contentImages: [Image]\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ninterface StashedPost {\n  title: String!\n  category: EnumCategory!\n  ownerId: ID!\n  owner: String!\n  contributions: [String]\n  originalContents: String!\n  series: String\n  topics: String\n  comments: String\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: String\n  thumbImages: String\n  contentImages: String\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype StashedGeneralPost implements StashedPost {\n  contents: String!\n  title: String!\n  category: EnumCategory!\n  ownerId: ID!\n  owner: String!\n  contributions: [String]\n  originalContents: String!\n  series: String\n  topics: String\n  comments: String\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: String\n  thumbImages: String\n  contentImages: String\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype StashedBookPost implements StashedPost {\n  title: String!\n  post: StashedPost!\n  bookName: String!\n  bookPublisher: String!\n  bookPrice: String\n  bookDescription: String\n  bookUrl: String\n  linkedStore: EnumLinkedStore!\n  contents: String!\n  category: EnumCategory!\n  ownerId: ID!\n  owner: String!\n  contributions: [String]\n  originalContents: String!\n  series: String\n  topics: String\n  comments: String\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: String\n  thumbImages: String\n  contentImages: String\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype StashedGitPost implements StashedPost {\n  title: String!\n  gitId: String!\n  gitAuthor: String!\n  gitTitle: String!\n  category: EnumCategory!\n  ownerId: ID!\n  owner: String!\n  contributions: [String]\n  originalContents: String!\n  series: String\n  topics: String\n  comments: String\n  keywords: String\n  summary: String\n  numViews: Int!\n  numLikes: Int!\n  numComments: Int!\n  isPrivate: Boolean!\n  usedFiles: String\n  thumbImages: String\n  contentImages: String\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Contribution {\n  id: ID!\n  postTitle: String!\n  post: Post!\n  contributorName: String!\n  contributor: User\n  type: String!\n  description: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Comment {\n  id: ID!\n  postTitle: String!\n  post: Post!\n  contents: String!\n  author: User!\n  isReply: Boolean!\n  replies: [Comment]\n  numLikes: Int!\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype User {\n  id: ID!\n  openId: String!\n  isPrimaryId: Boolean!\n  linkedId: String\n  accessToken: String!\n  userType: EnumUserType!\n  isStashed: Boolean!\n  stasher: User\n  stashedDate: String\n  email: String!\n  subscribeEmail: Boolean!\n  name: String\n  alias: String\n  profileImg: String\n  initialLetter: String\n  isHeavyUser: Boolean!\n  level: EnumLevel!\n  writtenPosts: [Post]\n  scrappedPosts: [Post]\n  comments: [Comment]\n  contributions: [Contribution]\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype File {\n  id: ID!\n  uploader: User!\n  alias: String!\n  fileType: EnumFileType!\n  url: String!\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Image {\n  id: ID!\n  size: String!\n  width: String!\n  height: String!\n  color: String\n  tags: String\n  raw: String\n  full: String\n  regular: String\n  small: String\n  thumb: String\n  fileId: ID!\n  fileInfo: File!\n  copyright: String!\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Series {\n  title: String!\n  posts: [Post]\n  description: String!\n  numViews: Int!\n  numLikes: Int!\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Topic {\n  name: String!\n  coverImageId: ID\n  coverImage: Image\n  coverDescription: String\n  numViews: Int!\n  events: [Event]\n  backImageId: ID\n  backImage: Image\n  iconId: ID\n  icon: Image\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Event {\n  id: ID!\n  name: String!\n  description: String!\n  mainImage: Image\n  topics: [Topic]\n  publishedAt: String\n  deprecatedAt: String\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype QueryPostResponse {\n  message: String\n  post: Post\n  posts: [Post]\n}\n\ntype QueryUserResponse {\n  message: String\n  user: User\n  users: [User]\n}\n\ntype Query {\n  # getUsers: [User]\n  getPosts: QueryPostResponse\n  getUsers: QueryUserResponse\n}\n\ntype AddPostResponse {\n  message: String\n}\n\ninput InputGeneralPost {\n  title: String!\n  contents: String!\n  category: EnumCategory\n  ownerId: ID\n  owner: InputUser\n  createdAt: Date\n  updatedAt: Date\n}\n\ninput InputUser {\n  id: ID!\n  openId: String!\n  isPrimaryId: Boolean!\n  accessToken: String!\n  userType: EnumUserType!\n  isStashed: Boolean!\n  email: String!\n  subscribeEmail: Boolean!\n  isHeavyUser: Boolean!\n  level: EnumLevel!\n  createdAt: Date!\n  updatedAt: Date!\n}\n\ntype Mutation {\n  addPost(post: InputGeneralPost): AddPostResponse\n  # addUser(user: InputUser): User\n}\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var typeDefs = (0, _apolloServerExpress.gql)(_templateObject());
var _default = typeDefs;
exports["default"] = _default;